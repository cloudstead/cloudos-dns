#
# Installation settings for standalone cloudos-dns
#

# Password for the initial admin superuser
export CLOUDOS_ADMIN_PASS=

# This is the local user account that will run the cloudos-dns server
export CLOUDOS_DNS_USER=cloudos-dns

# PostgreSQL configuration
# Currently the installer will not work unless PostgreSQL is running locally.
# Using a non-local database will require more manual steps to installation (not yet documented)
export PG_USER=postgres
export CLOUDOS_DNS_DB_HOST=127.0.0.1
export CLOUDOS_DNS_DB_PORT=5432

# Name of the database user
export CLOUDOS_DNS_DB_USER=cloudos_dns
export CLOUDOS_DNS_DB_PASS=$(head -c 16 /dev/urandom | od -x -A none | tr -d ' ')

# Name of the database
export CLOUDOS_DNS_DB_NAME=cloudos_dns

# Port where the cloudos-dns server will listen for connections (will bind only to 127.0.0.1)
export CLOUDOS_DNS_SERVER_PORT=4002

# cloudos-dns will only listed on localhost.
# Use Apache or nginx, preferably with HTTPS enabled, to proxy requests to cloudos-server
export PUBLIC_BASE_URI="https://$(hostname)/dns"

# Name of the initial admin superuser
export CLOUDOS_ADMIN_USER=admin

# Name of the queue for rooty requests
export ROOTY_QUEUE_NAME=cloudos-dns

# Key to encrypt queued messages
export ROOTY_SECRET=$(head -c 16 /dev/urandom | od -x -A none | tr -d ' ')

########################
# djbdns configuration
#
# If using cloudos-dns to connect to djbdns, uncomment the export below
# Ensure the "export DNS_DYN" below is commented out, or has no value
#
export DNS_HANDLER=rooty.toots.djbdns.DnsHandler

########################
# Dyn configuration
#
# If using cloudos-dns to connect to Dyn, uncomment the exports below and fill in the values
# Ensure the "export DNS_HANDLER" above is commented out, or has no value
#
# export DNS_DYN=true
# export DYNDNS_ACCOUNT=
# export DYNDNS_USER=
# export DYNDNS_PASSWORD=
# export DYNDNS_ZONE=
